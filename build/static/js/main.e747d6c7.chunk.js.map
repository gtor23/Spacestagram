{"version":3,"sources":["api/index.js","components/images.js","components/imageslist.js","components/imagecard.js","index.js"],"names":["require","config","NASA_KEY","process","BASE","getImages","a","axios","get","response","Images","useState","imagesData","setImagesData","loading","setLoading","isError","setIsError","getAllImages","data","message","console","error","useEffect","className","id","color","ImagesList","log","map","image","idx","ImageCard","liked","setLiked","title","media_type","width","height","src","url","alt","onClick","date","App","ReactDOM","render","document","getElementById"],"mappings":"+LACAA,EAAQ,IAAUC,SAClB,IAAMC,EAAWC,2CAEXC,EAAO,sCAEN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,+EAEwBC,IAAMC,IAAN,UAAaJ,EAAb,qBAA8BF,EAA9B,cAFxB,cAEOO,EAFP,yBAGQA,GAHR,qG,kDC6CQC,EA9CA,WAEX,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,uCAAG,8BAAAZ,EAAA,+EAEQD,IAFR,gBAENc,EAFM,EAENA,KAEPN,EAAcM,GAEdJ,GAAYD,GANC,gDASbG,EAAW,KAAMG,SACjBC,QAAQC,MAAR,MAVa,yDAAH,qDAoBlB,OALAC,qBAAU,WACNL,MACD,IAKC,qCACKJ,EAAU,KAAO,qBAAIU,UAAY,aAAhB,kBAAkC,sBAAMC,GAAK,MAAX,wBAInDT,EAAU,qBAAIQ,UAAY,QAAhB,UAAyBR,EAAzB,KAAmC,oEAE5CF,EAAW,sBAAKU,UAAY,SAAjB,cAA2B,oBAAIA,UAAY,UAAhB,wBAA3B,IAAqE,cAAC,IAAD,CAAWA,UAAY,WAAWV,QAAWA,EAASY,MAAQ,YAAnI,QACV,qBAAKF,UAAY,UAAjB,SAA2B,cAAC,EAAD,CAAYZ,WAAcA,UCtBrDe,EAfI,SAAC,GAAkB,IAAjBf,EAAgB,EAAhBA,WAIjB,OAFAS,QAAQO,IAAIhB,GAGX,mCACKA,EAAWiB,KAAI,SAACC,EAAOC,GACrB,OAAO,cAAC,EAAD,CAAWD,MAASA,EAAmBL,GAAMM,GAAXA,S,QCatCC,EArBG,SAAC,GAAiB,IAAhBF,EAAe,EAAfA,MAAOL,EAAQ,EAARA,GAEvB,EAA0Bd,oBAAS,GAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KAEA,OACI,sBAAKT,GAAMA,EAAID,UAAY,OAA3B,UACI,qBAAIA,UAAY,cAAhB,UAA+BM,EAAMK,MAArC,OACA,qBAAKX,UAAW,QAAhB,SACyB,SAApBM,EAAMM,WAAyB,wBAAQC,MAAM,MAAMC,OAAO,MAAMC,IAAMT,EAAMU,MAC7E,qBAAKH,MAAM,MAAMC,OAAO,MAAMC,IAAOT,EAAMU,IAAKC,IAAO,UAE3D,sBAAKjB,UAAY,cAAjB,UACI,cAAC,IAAD,CAASA,UAAS,UAAQS,EAAQ,QAAS,QAAzB,YAA4CS,QAAY,WAAOR,GAAUD,MAC3F,qBAAKT,UAAU,OAAf,SAAsB,oBAAIA,UAAY,aAAhB,SAA8BM,EAAMa,gBCXpEC,EAAM,WAER,OACI,mCACA,cAAC,EAAD,OAKRC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.e747d6c7.chunk.js","sourcesContent":["import axios from 'axios'\nrequire('dotenv').config();\nconst NASA_KEY = process.env.REACT_APP_API_KEY;\n\nconst BASE = 'https://api.nasa.gov/planetary/apod';\n\nexport async function getImages() {\n    try {\n        const response = await axios.get(`${BASE}/?api_key=${NASA_KEY}&count=12`)\n        return response\n    } catch (error) {\n               \n        throw error\n        \n    }\n}\n\n\n\n\n\n\n","import React, {useState, useEffect} from 'react'\nimport {getImages} from '../api'\nimport {ImagesList} from './index'\nimport BarLoader from 'react-spinners/BarLoader'\n\nconst Images = () => {\n\n    const [imagesData, setImagesData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [isError, setIsError] = useState(null);\n        \n    const getAllImages = async () => {\n        try {        \n            const {data} = await getImages();\n\n            setImagesData(data)\n           \n            setLoading(!loading)\n\n        }catch (error){\n            setIsError(error.message)\n            console.error(error)\n        }\n    }\n\n\n    useEffect(() => {\n        getAllImages()\n    }, [])\n\n   \n    return (\n        \n        <>\n            {loading ? null : <h1 className = 'main-title'>Space<span id = 'end'>stagram</span></h1>}\n\n            { \n\n             isError ? <h1 className = 'error'>{isError}. <span>Please refresh and try again.</span></h1> : \n\n             (loading ? (<div className = 'loader'> <h1 className = 'loading'>Loading...</h1> <BarLoader className = 'load-anm' loading = {loading} color ={'#e92667'}/>  </div>) : \n             ( <div className = 'content'><ImagesList imagesData = {imagesData}/></div>))\n                \n            }\n\n        </>\n        \n    )\n\n}\n\nexport default Images","import React, {useState} from 'react'\n\nimport {ImageCard} from './index'\n\nconst ImagesList = ({imagesData}) => {\n\n    console.log(imagesData)\n    \n    return (\n     <>\n         {imagesData.map((image, idx) => {\n            return <ImageCard image = {image} key = {idx} id = {idx} />\n         })}      \n    </>\n    )\n    \n    \n}\n\nexport default ImagesList","import React, {useState} from 'react'\nimport {FaHeart} from 'react-icons/fa'\n\nconst ImageCard = ({image, id}) => {\n\n    const [liked, setLiked] = useState(false)\n\n    return (\n        <div id = {id} className = 'card'>\n            <h1 className = 'image-title'>{image.title} </h1>\n            <div className ='media'>\n                {image.media_type == \"video\" ? (<iframe width=\"420\" height=\"345\" src ={image.url}/>) : \n                <img width=\"420\" height=\"345\" src = {image.url} alt = {'alt'}/>}\n            </div>\n            <div className = 'under-image'>\n                <FaHeart className = {`${ liked ? 'liked': 'heart'} pointer`} onClick = { () => {setLiked(!liked)}  } />\n                <div className='date'><h2 className = 'image-date'>{image.date}</h2></div> \n            </div>\n\n        </div>\n\n    )\n}\n\nexport default ImageCard","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {Images} from './components'\n\nconst App = () => {\n\n    return (\n        <>  \n        <Images  />\n        </>\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('app')\n);"],"sourceRoot":""}